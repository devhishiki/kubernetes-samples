apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: mongodb
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: mongo:4.2-bionic
        name: mongo
        command:
          - mongod
        args: ["--replSet","rs0","--auth","--dbpath","/data/db","--bind_ip","0.0.0.0"]
        ports:
          - containerPort: 27017
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - >
                if [ ! -f /data/db/mongod.lock ]; then
                  if [ "$HOSTNAME" = "mongo-0" ]; then
                    mongo --eval 'rs.initiate();';
                    mongo --eval 'db = db.getSiblingDB("admin"); db.createUser({ user: "adminuser", pwd: "password", roles: [{ role: "root", db: "admin" }]});';
                  fi;
                fi;
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: password
        - name: MONGO_INITDB_DATABASE
          value: "sample"
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo-pv-claim"
